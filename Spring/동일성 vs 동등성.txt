동일성
Identity, 메모리 내 주소값이 같은지 비교
자바 내에서 "=="를 통해 객체의 메모리 내 주소 값이 같은지 식별한다.

동등성
Equality, 논리적 지위가 동등한지 비교
특정 기준이 있고 이를 만족시키면 동등하다고 판단.

Ex.
public class Bus(){
    private final String name;
    private int number;

    public Bus(String name){
        this.name = name;
    }
}
void BusTest() {
    Bus bus1 = new Bus("마을버스");
    Bus bus2 = new Bus("마을버스");

    assertThat(bus1).isEqualTo(bus2);
}
위의 예제에서 Bus 클래스를 정의했다.
같은 이름을 가진 버스는 존재할 수 없다고 한다면,
같은 버스 객체를 생성했을 때 같다고 판단해야 할 것이다. 
위의 테스트에서는 같다를 기대했지만, 테스트가 실패한다.
이유는 Object.equals() 메소드가 ==비교를 통해 주소값을 비교하기 때문이다.

따라서 테스트를 통과하게 만들기 위해서는 String class에서 equals를 override하여
기준이 주소 값이 이름으로 두기로 해보자.

@Override
public boolean equals(Object o) {
    if (this == o)
        return true;
    if (o == null || getClass() != o.getClass())
        return false;
    Car car = (Car)o;
    return name.equals(car.name);
}

Override 어노테이션을 Bus 클래스 속에 넣음으로써 Bus 객체에서 equals를 호출하면
위의 equals 메서드가 호출될 것이다. 흐름은 다음과 같다.
1. 주소 값이 같으면 true를 리턴한다.
2. 주소 값이 null이거나 bus 클래스가 아닐경우 false를 리턴한다.
3. name필드 값이 같은지 검증한다.
이를 통해 name값 동일성 여부에 따라 bus가 같은지 다른지 판단된다.
따라서 위의 equals 메서드는 동등성 여부에 사용된다.
논리적 동등성의 기준을 어떻게 정하느냐에 따라 개발자가 정의해야 한다.

